apply plugin: 'com.vanniktech.maven.publish'
apply plugin: 'java'

///////////
// MAVEN //
///////////
java {
	withJavadocJar()
	withSourcesJar()
}

tasks.named('sourcesJar') {
	dependsOn 'jar'
}

// Where it's possible to name parameters and methods clearly enough
// that javadoc is not necessary, why make the code bigger?
//
// Thus, no javadoc warnings.
javadoc {
	options.addStringOption('Xdoclint:none', '-quiet')
	options.addStringOption('Xwerror', '-quiet')
}
// make sure bad javadoc breaks the build
tasks.named('check') {
	dependsOn tasks.named('javadoc')
}

// use markdown in javadoc
def makeLink = { url, text -> "<a href=\"${url}\" style=\"text-transform: none;\">${text}</a>" }
def javadocInfo = '<h2>' + makeLink("https://github.com/diffplug/spotless", "${group}:${project.ext.artifactId}:${version}") +
		' by ' + makeLink('https://www.diffplug.com', 'DiffPlug') + '</h2>'

String dotdotGradle = project.name.startsWith('eclipse-') ? '../../gradle' : '../gradle'
javadoc {
	options.encoding = 'UTF-8'
	// Where it's possible to name parameters and methods clearly enough
	// that javadoc is not necessary, why make the code bigger?
	//
	// Thus, no javadoc warnings.
	options.addStringOption('Xdoclint:none', '-quiet')
	options.addStringOption('source', '11')
	// setup the header
	options.header javadocInfo
	// setup links
	options.linksOffline('https://docs.gradle.org/6.1.1/javadoc/', "${dotdotGradle}/javadoc/gradle")

	// links to javadoc from the other versions
	options.linksOffline("https://javadoc.io/static/com.diffplug.spotless/spotless-lib/${rootProject.spotlessChangelog.versionLast}", "${dotdotGradle}/javadoc/spotless-lib")
	options.linksOffline("https://javadoc.io/static/com.diffplug.spotless/spotless-lib-extra/${rootProject.spotlessChangelog.versionLast}", "${dotdotGradle}/javadoc/spotless-lib-extra")
}

tasks.withType(AbstractArchiveTask).configureEach {
	preserveFileTimestamps = false
	reproducibleFileOrder = true
}
